syntax = "proto3";

option go_package = "proto/databasepb";

package databasepb;

service DatabaseService {
  rpc CreateDatabase(CreateDatabaseRequest) returns (CreateDatabaseResponse);
  rpc CreateTable(CreateTableRequest) returns (CreateTableResponse);
  rpc InsertRecord(InsertRecordRequest) returns (InsertRecordResponse);
  rpc QueryData(QueryDataRequest) returns (QueryDataResponse);
  rpc UpdateRecord(UpdateRecordRequest) returns (UpdateRecordResponse);
  rpc DeleteRecord(DeleteRecordRequest) returns (DeleteRecordResponse);
  rpc UpdateTable(UpdateTableRequest) returns (UpdateTableResponse);
  rpc AddIndex(AddIndexRequest) returns (AddIndexResponse);
  rpc DeleteIndex(DeleteIndexRequest) returns (DeleteIndexResponse);
  rpc ListIndexes(ListIndexesRequest) returns (ListIndexesResponse);
}

message CreateDatabaseRequest {
  string databaseName = 1;
}

message CreateDatabaseResponse {
  string message = 1;
}

message CreateTableRequest {
  string databaseName = 1;
  string tableName = 2;
  map<string, string> columns = 3; // column_name -> type (e.g., "id": "INTEGER PRIMARY KEY")
}

message CreateTableResponse {
  string message = 1;
}

message InsertRecordRequest {
  string databaseName = 1;
  string tableName = 2;
  map<string, string> record = 3; // column_name -> value
}

message InsertRecordResponse {
  string message = 1;
}

message QueryDataRequest {
  string databaseName = 1;
  string tableName = 2;
  string columns = 3;
  string condition = 4;
}

// âœ… FIX: Define a message type for query rows
message QueryRow {
    map<string, string> data = 1;
}

message QueryDataResponse {
  repeated QueryRow rows = 1;
}

message DeleteRecordRequest {
  string databaseName = 1;
  string tableName = 2;
  string condition = 3;
}

message DeleteRecordResponse {
  string message = 1;
}

// Request & Response for updating table structure
message UpdateTableRequest {
    string database_name = 1;
    string table_name = 2;
    string column_name = 3;
    string column_type = 4;
}

message UpdateTableResponse {
    string message = 1;
}

// Request & Response for updating a record
message UpdateRecordRequest {
    string database_name = 1;
    string table_name = 2;
    map<string, string> updates = 3;
    string condition = 4;
}

message UpdateRecordResponse {
    string message = 1;
}
 
message AddIndexRequest {
    string database_name = 1;
    string user_id = 2;
    string table_name = 3;
    string index_name = 4;
    repeated string columns = 5;
}

message AddIndexResponse {
    string message = 1;
}

message DeleteIndexRequest {
    string database_name = 1;
    string user_id = 2;
    string index_name = 3;
}

message DeleteIndexResponse {
    string message = 1;
}

message ListIndexesRequest {
    string database_name = 1;
    string user_id = 2;
}

message Index {
    string index_name = 1;
    string table_name = 2;
    string columns = 3;
}

message ListIndexesResponse {
    repeated Index indexes = 1;
}